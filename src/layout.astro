---
import Nav from './components/nav/Nav.astro';
import NavBar from './components/nav/Navbar.tsx';

interface Props {
    title: string;
    description: string;
}

const { title, description } = Astro.props;

import ogImage from '~/assets/og.png';
import 'aos/dist/aos.css';
import '~/global.css';
import Footer from "./components/footer/Footer.astro";
---

<html lang="en">
<head>
    <meta charset="utf-8"/>
    <link rel="icon" href="/favicon.ico" sizes="any"/>
    <link rel="icon" href="/favicon-light.svg" type="image/svg+xml"/>
    <meta name="theme-color" content="#00CC76"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>

    <title>{title}</title>
    <meta name="description" content={description}/>

    <meta property="og:title" content={title}/>
    <meta property="og:description" content={description}/>
    <meta property="og:url" content={Astro.site!.href}/>
    <meta property="og:site_name" content="Mateusz Bis | Portfolio"/>
    <meta property="og:type" content="website"/>

    <meta property="og:image" content={ogImage.src}/>
    <meta property="og:image:alt" content="Mateusz Bis - Portfolio"/>
    <meta property="og:image:type" content="image/png"/>
    <meta property="og:image:width" content={ogImage.width + ''}/>
    <meta property="og:image:height" content={ogImage.height + ''}/>

    <link rel="canonical" href={Astro.url.href}/>
</head>
<body>
<Nav/>
<slot/>

<script>
    import aos from 'aos';

    async function callback(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {
        entries.forEach(entry => {
            if (entry.intersectionRatio <= 0) return;
            const target = entry.target as HTMLImageElement;
            target.addEventListener("load", () => target.classList.add("loaded"), { once: true });
            target.srcset = target.dataset.srcset as string;
            observer.unobserve(target);
        });
    }

    /** set up a new IntersectionObserver if in the browser */
    const observer = new IntersectionObserver(callback, { rootMargin: "0px", threshold: 0.05 });

    document.addEventListener('DOMContentLoaded',
        () => {
            // utility for add images to the store add setting up proper event listeners
            function addImages(imgs: NodeListOf<HTMLImageElement>) {
                imgs.forEach(img => {
                    observer.observe(img);
                });
            }

            // observe all images
            addImages(document.querySelectorAll(".lazy-photo") as NodeListOf<HTMLImageElement>);
            aos.init({
                offset: 0,
                duration: 300,
                easing: "ease-in-sine",
                delay: 100,
            });
        },
    );
</script>
</body>
</html>
